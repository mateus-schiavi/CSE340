-- Criação do tipo ENUM para tipos de conta
CREATE TYPE public.account_type AS ENUM ('Client', 'Employee', 'Admin');
ALTER TYPE public.account_type OWNER TO cse340_p63t_user;

-- Criação da tabela classification
CREATE TABLE public.classification (
    classification_id INT GENERATED BY DEFAULT AS IDENTITY,
    classification_name CHARACTER VARYING NOT NULL,
    CONSTRAINT classification_pk PRIMARY KEY (classification_id)
);

-- Inserção de dados na tabela classification
INSERT INTO public.classification (classification_name)
VALUES 
  ('Classic'),
  ('Sport'),
  ('SUV'),
  ('Truck'),
  ('Used');

-- Criação da tabela inventory
CREATE TABLE IF NOT EXISTS public.inventory (
    inv_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    inv_make CHARACTER VARYING NOT NULL,
    inv_model CHARACTER VARYING NOT NULL,
    inv_year CHARACTER(4) NOT NULL,
    inv_description TEXT NOT NULL,
    inv_image CHARACTER VARYING NOT NULL,
    inv_thumbnail CHARACTER VARYING NOT NULL,
    inv_price NUMERIC(9, 0) NOT NULL,
    inv_miles INTEGER NOT NULL,
    inv_color CHARACTER VARYING NOT NULL,
    classification_id INTEGER NOT NULL,
    CONSTRAINT inventory_pkey PRIMARY KEY (inv_id)
);

-- Adiciona a chave estrangeira entre inventory e classification
ALTER TABLE IF EXISTS public.inventory
ADD CONSTRAINT fk_classification
FOREIGN KEY (classification_id)
REFERENCES public.classification (classification_id)
MATCH SIMPLE ON UPDATE CASCADE ON DELETE NO ACTION;

-- Criação da tabela account
CREATE TABLE IF NOT EXISTS public.account (
    account_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    account_firstname CHARACTER VARYING NOT NULL,
    account_lastname CHARACTER VARYING NOT NULL,
    account_email CHARACTER VARYING NOT NULL,
    account_password CHARACTER VARYING NOT NULL,
    account_type account_type NOT NULL DEFAULT 'Client'::account_type,
    CONSTRAINT account_pkey PRIMARY KEY (account_id)
);
